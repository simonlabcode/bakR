Counts_df <- Counts_df %>%
dplyr::right_join(ranked_features_df, by = 'XF') %>% dplyr::ungroup()
Counts_df
names(Counts_df)[names(Counts_df) == "N"] <- "n"
Counts_df
end_4 <- Sys.time()
start_5 <- Sys.time()
# Make count matrix
Cnt_mat <- matrix(0, ncol = length(samp_list), nrow = length(unique(Counts_df$XF)))
for(s in seq_along(samp_list)){
Cnt_mat[,s] <- Counts_df$n[Counts_df$sample == samp_list[s]]
}
rownames(Cnt_mat) <- Counts_df$XF[Counts_df$sample == samp_list[1]]
colnames(Cnt_mat) <- samp_list
rm(Counts_df)
sdf_Utmp <- cB[, .N, by = .(sample, XF, TC, nT)]
names(sdf_Utmp)[names(sdf_Utmp) == "N"] <- "n"
sdf_U < sdf_Utmp %>%
dplyr::right_join(ranked_features_df, by = 'XF') %>%
dplyr::ungroup()
devtools::load_all()
test <- bakR::cBprocess(sim$bakRData)
devtools::load_all()
test <- bakR::cBprocess(sim$bakRData)
devtools::load_all()
test <- bakR::cBprocess(sim$bakRData)
test$times
anti_join(check_fast, test$Fast_df)
dplyr::anti_join(check_fast, test$Fast_df)
test$Fast_df
check_fast
test$Fast_df
nrow(test$Fast_df)
test <- bakR::cBprocess(sim$bakRData)
dplyr::anti_join(check_fast, test$Fast_df)
devtools::load_all()
test <- bakR::cBprocess(sim$bakRData)
dplyr::anti_join(check_fast, test$Fast_df)
set.seed(123)
sim <- Simulate_bakRData(3000)
devtools::load_all()
set.seed(123)
sim2 <- Simulate_bakRData(3000)
dplyr::anti_join(sim$bakRData$cB, sim2$bakRData$cB)
library(tidyverse)
library(rstan)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
setwd("C:/Users/isaac/Documents/Simon_Lab/bakR/")
devtools::load_all()
###
sim <- Simulate_bakRData(200, nreps = 2)
Fit <- bakRFit(sim$bakRData, pnew = rep(0.05, times = 4), pold = 0.001)
setwd("C:/Users/isaac/Documents/Simon_Lab/")
safefit <- stan(file = "Mutrate_est.stan",
data = Fit$Data_lists$Stan_data)
###
sim <- Simulate_bakRData(50, nreps = 2)
Fit <- bakRFit(sim$bakRData, pnew = rep(0.05, times = 4), pold = 0.001)
setwd("C:/Users/isaac/Documents/Simon_Lab/")
safefit <- stan(file = "Mutrate_est.stan",
data = Fit$Data_lists$Stan_data)
fit_summary <- as.data.frame(summary(fit)$summary)
fit_summary <- as.data.frame(summary(safefit)$summary)
fit_summary
fit_summary$parameter <- row.names(fit_summary)
fit_summary <- as_tibble(fit_summary)
fit_summary
kdeg_summary <- fit_summary[grep("kd_rep", fit_summary$parameter),]
kdeg_summary
nrep <- Fit$Data_lists$Stan_data$nrep
nMT <- Fit$Data_lists$Stan_data$nMT
kdeg_summary$FN <- rep(1:nrow(kdeg_summary)/(nreps*nMT), each = nreps*nMT)
kdeg_summary$MT <- rep(rep(1:nMT, each = nreps), times = nrow(kdeg_sumary)/(nreps*nMT))
nreps <- Fit$Data_lists$Stan_data$nrep
nMT <- Fit$Data_lists$Stan_data$nMT
kdeg_summary$FN <- rep(1:nrow(kdeg_summary)/(nreps*nMT), each = nreps*nMT)
kdeg_summary$MT <- rep(rep(1:nMT, each = nreps), times = nrow(kdeg_sumary)/(nreps*nMT))
nrow(kdeg_summary)
Fit$Data_lists$Stan_data$NF*4
1:nrow(kdeg_summary)/(nreps*nMT)
nreps
nMT
kdeg_summary$FN <- rep(1:(nrow(kdeg_summary)/(nreps*nMT)), each = nreps*nMT)
kdeg_summary$MT <- rep(rep(1:nMT, each = nreps), times = nrow(kdeg_sumary)/(nreps*nMT))
kdeg_summary$MT <- rep(rep(1:nMT, each = nreps), times = nrow(kdeg_summary)/(nreps*nMT))
kdeg_summary <- kdeg_summary %>% group_by(FN, MT) %>%
sumarise(avg_mean = stats::weighted.mean(mean, weights = 1/sd),
avg_sd = sqrt(1/sum(1/(var(mean) + sd^2 ) ) ))
kdeg_summary <- kdeg_summary %>% group_by(FN, MT) %>%
summarise(avg_mean = stats::weighted.mean(mean, weights = 1/sd),
avg_sd = sqrt(1/sum(1/(var(mean) + sd^2 ) ) ))
kdeg_summary
L2FC_kdeg <- kdeg_summary %>% group_by(FN) %>%
summarise(L2FC = avg_mean[MT == 2] - avg_mean[MT == 1],
se = sqrt(sum(avg_sd^2))) %>% ungroup() %>%
mutate(pval = 2*dnorm(-abs(L2FC/se)),
padj = stats::p.adjust(pval, method = "BH"))
L2FC_kdeg
hist(L2FC_kdeg$L2FC[L2FC_kdeg$FN > 500])
hist(L2FC_kdeg$L2FC[L2FC_kdeg$FN > 25])
hist(L2FC_kdeg$L2FC)
getwd()
### Fit with Stan
safefit <- stan(file = "Ole_reliable.stan",
data = Fit$Data_lists$Stan_data)
### Summarise fit
fit_summary <- as.data.frame(summary(safefit)$summary)
### Add parameter column
fit_summary$parameter <- row.names(fit_summary)
### Make tibble because I like tibbles
fit_summary <- as_tibble(fit_summary)
### Extract log(kdeg) estimates
kdeg_summary <- fit_summary[grep("log_kd_rep", fit_summary$parameter),]
nreps <- Fit$Data_lists$Stan_data$nrep
nMT <- Fit$Data_lists$Stan_data$nMT
### Add feature number of experimental ID information
kdeg_summary$FN <- rep(1:(nrow(kdeg_summary)/(nreps*nMT)), each = nreps*nMT)
kdeg_summary$MT <- rep(rep(1:nMT, each = nreps), times = nrow(kdeg_summary)/(nreps*nMT))
### Average log(kdeg) over replicates
kdeg_summary <- kdeg_summary %>% group_by(FN, MT) %>%
summarise(avg_mean = stats::weighted.mean(mean, weights = 1/sd),
avg_sd = sqrt(1/sum(1/(var(mean) + sd^2 ) ) ))
### Calcualte L2FC(kdeg)
L2FC_kdeg <- kdeg_summary %>% group_by(FN) %>%
summarise(L2FC = avg_mean[MT == 2] - avg_mean[MT == 1],
se = sqrt(sum(avg_sd^2))) %>% ungroup() %>%
mutate(pval = 2*dnorm(-abs(L2FC/se)),
padj = stats::p.adjust(pval, method = "BH"))
hist(L2FC_kdeg$L2FC)
devtools::load_all()
setwd("C:/Users/isaac/Documents/Simon_Lab/bakR/")
devtools::load_all()
simdat <- Simulate_bakRData(500, nreps = 2)
simdat$bakRData$metadf
metadf <- simdat$bakRData$metadf
metadf[,7] <- c(60, 2)
old_metadf <- simdat$bakRData$metadf
metadf <- data.frame(tl = c(metadf$tl, 60),
Exp_ID = c(metadf$Exp_ID, 2))
metadf
samp_list <- 1:nrow(metadf)
rep_list <- metadf[samp_list,] %>% dplyr::mutate(ctl = ifelse(tl == 0, 0, 1)) %>%
dplyr::group_by(ctl, Exp_ID) %>% dplyr::mutate(r_id = 1:length(tl)) %>% dplyr::ungroup() %>% dplyr::select(r_id)
rep_list
rep_list <- rep_list$r_id
metadf <- metadf[samp_list, ] %>% dplyr::mutate(ctl = ifelse(tl == 0, 0, 1)) %>%
dplyr::group_by(ctl, Exp_ID) %>% dplyr::mutate(r_id = 1:length(tl)) %>% dplyr::ungroup()
metadf
simdat <- Simulate_bakRData(500, nreps = 3)
simdat <- Simulate_bakRData(500, nreps = 3)
simbakR <- simdat$bakRData
simcB <- simbakR$cB
unique(simcB$sample)
simbakR$metadf
row.names(simbakR$metadf)
## Remove sample "1"
simcB <- simcB[simcB$sample != "1",]
simmeta <- simbakR$metadf[2:8,]
simmeta
newbakR <- bakRData(simcB, simmeta)
dataprocess <- cBprocess(newbakR)
dataprocess$Stan_data
c(2, 3)
reps <- c(2, 3)
seq(from = 1, to = c(2, 3), by = 1)
c(sapply(reps, function(x) seq(1, x)))
unlist(sapply(reps, function(x) seq(1, x)))
?sapply
seq(from = 1, to = 2, each = reps)
rep(1:2, times = reps)
setwd("C:/Users/isaac/Documents/Simon_Lab/bakR/")
devtools::load_all()
devtools::load_all()
Fit <- bakRFit(newbakR)
devtools::load_all()
Fit <- bakRFit(newbakR)
plotVolcano(Fit$Fast_Fit)
Fit$Fast_Fit$Regularized_ests
Fit$Fast_Fit$Fn_Estimates
simdat
simdat$sim_list$Fn_rep_sim
Fnsim <- simdat$sim_list$Fn_rep_sim
Fnsim
Fnsim <- Fnsim[!(Fnsim$Exp_ID ==1 & Fnsim$Replicate == 1),]
plot(Fnsim$Logit_fn, Fit$Fast_Fit$Fn_Estimates$logit_fn)
nrow(Fnsim)
nrow(Fit$Fast_Fit$Fn_Estimates)
Fnsim
Fnsim <- Fnsim[Fnsim$Feature_ID %in% Fit$Fast_Fit$Effects_df$XF,]
plot(Fnsim$Logit_fn, Fit$Fast_Fit$Fn_Estimates$logit_fn)
abline(0,1)
## What if I use StanRateEst
Fit <- bakRFit(Fit, FastRerun = TRUE, StanRateEst = TRUE, RateEst_size = 7)
warnings()
test1 <- data.frame(pnew = c(0.05, 0.05, 0.05, 0.05, 0.05, 0.05), R = rep(1:3, times = 2), E = rep(1:2, each = 3))
test1
test2 <- data.frame(R = c(1, 2, 1, 2, 3), E = c(1, 1, 2, 2, 2))
left_join(test1, test2)
dplyr::left_join(test1, test2)
dplyr::right_join(test1, test2)
## What if I use StanRateEst
Fit <- bakRFit(Fit, FastRerun = TRUE, StanRateEst = TRUE, RateEst_size = 7)
devtools::load_all()
## What if I use StanRateEst
Fit <- bakRFit(Fit, FastRerun = TRUE, StanRateEst = TRUE, RateEst_size = 7)
warnings()
devtools::load_all()
## What if I use StanRateEst
Fit <- bakRFit(Fit, FastRerun = TRUE, StanRateEst = TRUE, RateEst_size = 7)
devtools::load_all()
## What if I use StanRateEst
Fit <- bakRFit(Fit, FastRerun = TRUE, StanRateEst = TRUE, RateEst_size = 10)
?right_join
devtools::load_all()
## What if I use StanRateEst
Fit <- bakRFit(Fit, FastRerun = TRUE, StanRateEst = TRUE, RateEst_size = 10)
plot(Fnsim$Logit_fn, Fit$Fast_Fit$Fn_Estimates$logit_fn)
abline(0,1)
### Testing edited Hybrid analysis
Fit <- bakRFit(Fit, HybridFit = TRUE)
plotVolcano(Fit$Hybrid_Fit)
plot(Fit$Fast_Fit$Effects_df$effect/Fit$Fast_Fit$Effects_df$se,
Fit$Hybrid_Fit$Effects_df$effect/Fit$Hybrid_Fit$Effects_df$se)
abline(0,1)
test1 <- data.frame(a = c(1, 2, 3), b = c(1, 1, 2, 2, 2), c = c(1, 2, 1, 2, 3))
test1 <- data.frame(a = c(1, 2, 3, 4, 5), b = c(1, 1, 2, 2, 2), c = c(1, 2, 1, 2, 3))
test1
test1 <- data.frame(a = c(1, 2, 3, 4, 5), b = c(1, 1, 1, 1, 2), c = c(1, 1, 2, 2, 1))
test1
test2 <- data.frame(b = 1, c = 1)
right_join(test1, test2)
dplyr::right_join(test1, test2, by = c("b", "c"))
devtools::load_all()
devtools::load_all()
### Testing edited Hybrid analysis
Fit <- bakRFit(Fit, HybridFit = TRUE)
simdat <- Simulate_bakRData(250, nreps = 3)
simbakR <- simdat$bakRData
simcB <- simbakR$cB
## Remove sample "1"
simcB <- simcB[simcB$sample != "1",]
simmeta <- simbakR$metadf[2:8,]
newbakR <- bakRData(simcB, simmeta)
dataprocess <- cBprocess(newbakR)
dataprocess$Stan_data
Fit <- bakRFit(newbakR)
## What if I use StanRateEst
Fit <- bakRFit(Fit, FastRerun = TRUE, StanRateEst = TRUE, RateEst_size = 7)
devtools::load_all()
Fit$Data_lists$Stan_data$nrep_vect
### Testing edited Hybrid analysis
Fit <- bakRFit(Fit, HybridFit = TRUE)
plotVolcano(Fit$Hybrid_Fit)
plot(Fit$Fast_Fit$Effects_df$effect/Fit$Fast_Fit$Effects_df$se,
Fit$Hybrid_Fit$Effects_df$effect/Fit$Hybrid_Fit$Effects_df$se)
abline(0,1)
plot(Fit$Fast_Fit$Fn_Estimates$logit_fn, Fit$Hybrid_Fit$Fn_Estimates$logit_fn)
abline(0,1)
### Testing MCMC analysis
Fit <- bakRFit(Fit, StanFit = TRUE)
simdat <- Simulate_bakRData(250, nreps = 3, pnew = 0.02)
simbakR <- simdat$bakRData
simcB <- simbakR$cB
## Remove sample "1"
simcB <- simcB[simcB$sample != "1",]
simmeta <- simbakR$metadf[2:8,]
newbakR <- bakRData(simcB, simmeta)
dataprocess <- cBprocess(newbakR)
dataprocess$Stan_data
Fit <- bakRFit(newbakR)
Fit$Fast_Fit
Fit <- bakRFit(newbakR)
# Check accuracy
Fnsim <- simdat$sim_list$Fn_rep_sim
Fnsim <- Fnsim[!(Fnsim$Exp_ID ==1 & Fnsim$Replicate == 1),]
Fnsim <- Fnsim[Fnsim$Feature_ID %in% Fit$Fast_Fit$Effects_df$XF,]
plot(Fnsim$Logit_fn, Fit$Fast_Fit$Fn_Estimates$logit_fn)
abline(0,1)
newbakR
devtools::load_all()
setwd("C:/Users/isaac/Documents/Simon_Lab/bakR/")
devtools::load_all()
simdat <- Simulate_bakRData(250, nreps = 3, pnew = 0.02)
simbakR <- simdat$bakRData
simdat <- Simulate_bakRData(250, nreps = 3, p_new = 0.02)
simbakR <- simdat$bakRData
simcB <- simbakR$cB
## Remove sample "1"
simcB <- simcB[simcB$sample != "1",]
simmeta <- simbakR$metadf[2:8,]
newbakR <- bakRData(simcB, simmeta)
dataprocess <- cBprocess(newbakR)
Fit <- bakRFit(newbakR)
## What if I use StanRateEst
Fit <- bakRFit(Fit, FastRerun = TRUE, StanRateEst = TRUE, RateEst_size = 7)
plot(Fnsim$Logit_fn, Fit$Fast_Fit$Fn_Estimates$logit_fn)
abline(0,1)
# Check accuracy
Fnsim <- simdat$sim_list$Fn_rep_sim
Fnsim <- Fnsim[!(Fnsim$Exp_ID ==1 & Fnsim$Replicate == 1),]
Fnsim <- Fnsim[Fnsim$Feature_ID %in% Fit$Fast_Fit$Effects_df$XF,]
plot(Fnsim$Logit_fn, Fit$Fast_Fit$Fn_Estimates$logit_fn)
abline(0,1)
### Testing MCMC analysis
Fit <- bakRFit(Fit, StanFit = TRUE)
plot(Fit$Stan_Fit$Effects_df$effect/Fit$Stan_Fit$Effects_df$se,
Fit$Hybrid_Fit$Effects_df$effect/Fit$Hybrid_Fit$Effects_df$se)
plot(Fit$Fast_Fit$Effects_df$effect/Fit$Fast_Fit$Effects_df$se,
Fit$Stan_Fit$Effects_df$effect/Fit$Stan_Fit$Effects_df$se)
abline(0,1)
plot(Fit$Fast_Fit$Fn_Estimates$logit_fn, Fit$Hybrid_Fit$Fn_Estimates$logit_fn)
abline(0,1)
setwd("C:/Users/isaac/Documents/Simon_Lab/bakR/")
devtools::load_all()
simdat <- Simulate_bakRData(500, nreps = 3)
simdat <- Simulate_bakRData(250, nreps = 3, p_new = 0.02)
Fit <- bakRFit(simdat$bakRData)
Fit <- bakRFit(simdat$bakRData, StanRateEst = TRUE)
Fit <- bakRFit(simdat$bakRData, StanRateEst = TRUE, RateEst_size = 5)
rlang::last_error()
devtools::load_all()
Fit <- bakRFit(simdat$bakRData, StanRateEst = TRUE, RateEst_size = 5)
devtools::load_all()
Fit <- bakRFit(simdat$bakRData, StanRateEst = TRUE, RateEst_size = 5)
truedf
rep_actual
nrep_mut
nMt
nMT
nreps
unlist(sapply(c(3, 3), function(x) seq(1, x)))
unlist(sapply(c(3, 2), function(x) seq(1, x)))
unlist(sapply(c(2, 2), function(x) seq(1, x)))
sapply(c(2, 2), function(x) seq(1, x))
sapply(c(2, 3), function(x) seq(1, x))
lapply(c(2, 2), function(x) seq(1, x))
devtools::load_all()
Fit <- bakRFit(simdat$bakRData, StanRateEst = TRUE, RateEst_size = 5)
devtools::load_all()
Fit <- bakRFit(simdat$bakRData, StanRateEst = TRUE, RateEst_size = 5)
plotVolcano(Fit$Fast_Fit)
devtools::load_all()
simdat <- Simulate_bakRData(250, nreps = 3, p_new = 0.02)
simbakR <- simdat$bakRData
simcB <- simbakR$cB
## Remove sample "1"
simcB <- simcB[simcB$sample != "1",]
simmeta <- simbakR$metadf[2:8,]
newbakR <- bakRData(simcB, simmeta)
dataprocess <- cBprocess(newbakR)
dataprocess$Stan_data
Fit <- bakRFit(newbakR)
# Check accuracy
Fnsim <- simdat$sim_list$Fn_rep_sim
Fnsim <- Fnsim[!(Fnsim$Exp_ID ==1 & Fnsim$Replicate == 1),]
Fnsim <- Fnsim[Fnsim$Feature_ID %in% Fit$Fast_Fit$Effects_df$XF,]
plot(Fnsim$Logit_fn, Fit$Fast_Fit$Fn_Estimates$logit_fn)
abline(0,1)
## What if I use StanRateEst
Fit <- bakRFit(Fit, FastRerun = TRUE, StanRateEst = TRUE, RateEst_size = 7)
plot(Fnsim$Logit_fn, Fit$Fast_Fit$Fn_Estimates$logit_fn)
abline(0,1)
### Testing edited Hybrid analysis
Fit <- bakRFit(Fit, HybridFit = TRUE)
plotVolcano(Fit$Hybrid_Fit)
plot(Fit$Fast_Fit$Effects_df$effect/Fit$Fast_Fit$Effects_df$se,
Fit$Hybrid_Fit$Effects_df$effect/Fit$Hybrid_Fit$Effects_df$se)
abline(0,1)
plot(Fit$Fast_Fit$Fn_Estimates$logit_fn, Fit$Hybrid_Fit$Fn_Estimates$logit_fn)
abline(0,1)
simdat <- Simulate_bakRData(250, nreps = 3, p_new = 0.02)
Fit <- bakRFit(simdat$bakRData, StanRateEst = TRUE, RateEst_size = 5)
plotVolcano(Fit$Hybrid_Fit)
### Testing edited Hybrid analysis
Fit <- bakRFit(Fit, HybridFit = TRUE)
plotVolcano(Fit$Hybrid_Fit)
plot(Fit$Fast_Fit$Effects_df$effect/Fit$Fast_Fit$Effects_df$se,
Fit$Hybrid_Fit$Effects_df$effect/Fit$Hybrid_Fit$Effects_df$se)
abline(0,1)
plot(Fit$Fast_Fit$Fn_Estimates$logit_fn, Fit$Hybrid_Fit$Fn_Estimates$logit_fn)
abline(0,1)
simdat <- Simulate_bakRData(250, nreps = 3, p_new = 0.02)
simbakR <- simdat$bakRData
Fit_symm <- bakRFit(simbakR)
simcB <- simbakR$cB
## Remove sample "1"
simcB <- simcB[simcB$sample != "1",]
simmeta <- simbakR$metadf[2:8,]
newbakR <- bakRData(simcB, simmeta)
dataprocess <- cBprocess(newbakR)
Fit <- bakRFit(newbakR)
nrow(Fit_symm$Fast_Fit$Effects_df)
nrow(Fit_symm$Fast_Fit$Effects_df)
nrow(Fit$Fast_Fit$Effects_df)
simmeta
plot(Fit$Fast_Fit$Regularized_ests$sd_log_kdeg[Fit$Fast_Fit$Regularized_ests$Exp_ID == 1],
Fit_symm$Fast_Fit$Regularized_ests$sd_log_kdeg[Fit_symm$Fast_Fit$Regularized_ests$Exp_ID == 1])
abline(0,1)
Fit_symm <- bakRFit(Fit_symm, HybridFit = TRUE)
Fit <- bakRFit(Fit, HybridFit = TRUE)
plot(Fit$Fast_Fit$Regularized_ests$sd_log_kdeg[Fit$Fast_Fit$Regularized_ests$Exp_ID == 2],
Fit_symm$Fast_Fit$Regularized_ests$sd_log_kdeg[Fit_symm$Fast_Fit$Regularized_ests$Exp_ID == 2])
abline(0,1)
plot(Fit$Hybrid_Fit$Kdeg_df$kdeg_sd[Fit$Hybrid_Fit$Kdeg_df$Exp_ID == 1],
Fit_symm$Hybrid_Fit$Kdeg_df$kdeg_sd[Fit_symm$Hybrid_Fit$Kdeg_df$Exp_ID == 1])
abline(0,1)
plot(Fit$Hybrid_Fit$Effects_df$L2FC_kd_sd,
Fit_symm$Hybrid_Fit$Effects_df$L2FC_kd_sd)
abline(0,1)
simdat <- Simulate_bakRData(250, nreps = 5, p_new = 0.02)
simbakR <- simdat$bakRData
Fit_symm <- bakRFit(simbakR)
Fit_symm <- bakRFit(Fit_symm, HybridFit = TRUE)
simbakR$metadf
## Remove sample "1"
simcB <- simcB[!(simcB$sample %in% c("1", "2", "3")), ]
simmeta <- simbakR$metadf[4:nrow(simbakR$metadf),]
simmeta
newbakR <- bakRData(simcB, simmeta)
unique(simcB$sample)
simbakR$cB
simcB <- simbakR$cB
unique(simcB$sample)
## Remove sample "1"
simcB <- simcB[simcB$sample != "1" & simcB$sample != "2" & simcB$sample != "3", ]
simcB
unique(simcB$sample)
simmeta <- simbakR$metadf[4:nrow(simbakR$metadf),]
newbakR <- bakRData(simcB, simmeta)
dataprocess <- cBprocess(newbakR)
Fit <- bakRFit(newbakR)
Fit <- bakRFit(Fit, HybridFit = TRUE)
plot(Fit$Fast_Fit$Regularized_ests$sd_log_kdeg[Fit$Fast_Fit$Regularized_ests$Exp_ID == 1],
Fit_symm$Fast_Fit$Regularized_ests$sd_log_kdeg[Fit_symm$Fast_Fit$Regularized_ests$Exp_ID == 1])
?Simulate_bakRData
simdat <- Simulate_bakRData(250, nreps = 5, p_new = 0.02, kslog_c = 1.2)
simbakR <- simdat$bakRData
Fit_symm <- bakRFit(simbakR, totcut = 10)
Fit_symm <- bakRFit(Fit_symm, HybridFit = TRUE)
simcB <- simbakR$cB
## Remove sample "1"
simcB <- simcB[simcB$sample != "1" & simcB$sample != "2" & simcB$sample != "3", ]
simmeta <- simbakR$metadf[4:nrow(simbakR$metadf),]
newbakR <- bakRData(simcB, simmeta)
Fit <- bakRFit(newbakR)
Fit <- bakRFit(Fit, HybridFit = TRUE)
plot(Fit$Fast_Fit$Regularized_ests$sd_log_kdeg[Fit$Fast_Fit$Regularized_ests$Exp_ID == 1],
Fit_symm$Fast_Fit$Regularized_ests$sd_log_kdeg[Fit_symm$Fast_Fit$Regularized_ests$Exp_ID == 1])
abline(0,1)
Fit <- bakRFit(newbakR, totcut = 10)
Fit <- bakRFit(Fit, HybridFit = TRUE)
plot(Fit$Fast_Fit$Regularized_ests$sd_log_kdeg[Fit$Fast_Fit$Regularized_ests$Exp_ID == 1],
Fit_symm$Fast_Fit$Regularized_ests$sd_log_kdeg[Fit_symm$Fast_Fit$Regularized_ests$Exp_ID == 1])
abline(0,1)
plot(Fit$Fast_Fit$Regularized_ests$sd_log_kdeg[Fit$Fast_Fit$Regularized_ests$Exp_ID == 2],
Fit_symm$Fast_Fit$Regularized_ests$sd_log_kdeg[Fit_symm$Fast_Fit$Regularized_ests$Exp_ID == 2])
abline(0,1)
plot(Fit$Hybrid_Fit$Kdeg_df$kdeg_sd[Fit$Hybrid_Fit$Kdeg_df$Exp_ID == 1],
Fit_symm$Hybrid_Fit$Kdeg_df$kdeg_sd[Fit_symm$Hybrid_Fit$Kdeg_df$Exp_ID == 1])
abline(0,1)
plot(Fit$Hybrid_Fit$Effects_df$L2FC_kd_sd,
Fit_symm$Hybrid_Fit$Effects_df$L2FC_kd_sd)
abline(0,1)
plot(Fit$Fast_Fit$Regularized_ests$sd_log_kdeg[Fit$Fast_Fit$Regularized_ests$Exp_ID == 1],
Fit_symm$Fast_Fit$Regularized_ests$sd_log_kdeg[Fit_symm$Fast_Fit$Regularized_ests$Exp_ID == 1])
abline(0,1)
devtools::load_all()
devtools::load_all()
?Simulate_bakRdata
devtools::load_all()
devtools::document()
?Simulate_bakRdata
?bakRFit
?bakRData
?Simulate_bakRData
devtools::document()
devtools::document()
?fast_analysis
devtools::document()
?bakRFit
?fast_analysis
?TL_stan
setwd("C:/Users/isaac/Documents/Simon_Lab/bakR/")
devtools::load_all()
simdat <- Simulate_bakRData(500, nreps = 3)
simdat <- Simulate_bakRData(250, nreps = 3, p_new = 0.02)
simdat <- Simulate_bakRData(250, nreps = 5, p_new = 0.02, kslog_c = 1.2)
simbakR <- simdat$bakRData
simcB <- simbakR$cB
## Remove sample "1"
simcB <- simcB[simcB$sample != "1" & simcB$sample != "2" & simcB$sample != "3", ]
simmeta <- simbakR$metadf[4:nrow(simbakR$metadf),]
newbakR <- bakRData(simcB, simmeta)
Fit <- bakRFit(newbakR, totcut = 10)
Fit <- bakRFit(Fit, HybridFit = TRUE)
simmeta
## Remove sample "1"
simcB <- simcB[simcB$sample != "8" & simcB$sample != "9" & simcB$sample != "10", ]
simbakR$metadf
simmeta <- simbakR$metadf[c(4:7, 11:12),]
simmmeta
simmeta
newbakR <- bakRData(simcB, simmeta)
Fit2 <- bakRFit(newbakR, totcut = 10)
Fit2 <- bakRFit(Fit, HybridFit = TRUE)
XF_both <- intersect(Fit$Fast_Fit$Effects_df$XF, Fit2$Fast_Fit$Effects_df$XF)
length(XF_Both)
length(XF_both)
plot(Fit$Hybrid_Fit$Kdeg_df$kdeg_sd[Fit$Hybrid_Fit$Kdeg_df$Exp_ID == 1],
Fit2$Hybrid_Fit$Kdeg_df$kdeg_sd[Fit$Hybrid_Fit$Kdeg_df$Exp_ID == 1])
abline(0,1)
