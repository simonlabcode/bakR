Fit$Fast_Fit
Fit$Fast_Fit$Effects_df$Feature_ID
Fit$Fast_Fit$Mut_rates
Fit <- DynamicSeqFit(DynData, FastRerun = TRUE, StanRateEst = TRUE, RateEst_size = 15)
Fit <- DynamicSeqFit(Fit, HybridFit = TRUE, chains = 2)
setwd("C:/Users/isaac/Documents/Simon_Lab/DynamicSeq/")
devtools::load_all()
Fit <- DynamicSeqFit(Fit, HybridFit = TRUE, chains = 2)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
Fit <- DynamicSeqFit(Fit, HybridFit = TRUE, chains = 2)
Fit <- DynamicSeqFit(Fit, StanFit = TRUE, chains = 2, keep_fit = FALSE)
rcmdcheck::rcmdcheck()
?dnorm
devtools::build_manual()
?devtools::build_manual
getwd()
devtools::build_manual(pkd = "C:/Users/isaac/Documents/Simon_Lab/DynamicSeq")
devtools::build_manual(pkg = "C:/Users/isaac/Documents/Simon_Lab/DynamicSeq")
devtools::build_manual(pkg = "C:/Users/isaac/Documents/Simon_Lab/DynamicSeq")
getwd()
setwd("C:/Users/isaac/Documents/Simon_Lab/")
R CMD Rd2pdf "DynamicSeq"
?Rd2pdf
R CMD Rd2pdf "C:/Users/isaac/Documents/Simon_Lab/DynamicSeq/"
library(rcmdcheck)
R CMD Rd2pdf "C:/Users/isaac/Documents/Simon_Lab/DynamicSeq/"
rcmdcheck::rcmdcheck()
getwd()
setwd("C:/Users/isaac/Documents/Simon_Lab/DynamicSeq/")
rcmdcheck::rcmdcheck()
tools::texi2dvi()
tools::texi2dvi
library(help = "tools")
devtools::document
devtools::document()
rcmdcheck::rcmdcheck()
?changer::changer
getwd()
changer::changer(path = "C:/Users/isaac/Documents/Simon_Lab/DynamicSeq", new_name = "bakR")
devtools::document()
devtools::document()
pkgbuild::compile_dll(force=TRUE)
devtools::document()
library(devtools)
library(tidyverse)
library(rstan)
# Plotting theme
theme_mds <-    theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.text = element_text(color="black", size = 12),
axis.title = element_text(color="black", size = 18),
strip.background = element_blank())
setwd("C:/Users/isaac/Documents/Simon_Lab/DynamicSeq/")
devtools::load_all()
set.seed(123)
sim_list <- sim_bakRData(200, num_kd_DE = c(0, 100),num_conds = 2, p_new = 0.1,
nreps = 2, eff_sd = 0.7, tl = 1, fn_sd = 1, STL = TRUE)
DynData <- sim_list$bakRData
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE, RateEst_size = 5)
Fit <- bakRFit(DynData, FastRerun = TRUE, StanRateEst = TRUE, RateEst_size = 15)
Fit <- bakRFit(DynData, FastRerun = TRUE, StanRateEst = FALSE, pnew = rep(0.1, times = 4), pold = 0.001)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
Fit <- bakRFit(Fit, HybridFit = TRUE, chains = 2)
Fit <- bakRFit(Fit, StanFit = TRUE, chains = 2, keep_fit = FALSE)
stanmodels$MCMC_Model
getwd()
devtools::document()
Fit <- bakRFit(Fit, HybridFit = TRUE, chains = 2)
stanmodels$Hybrid
rstan::sampling(stanmodels$MCMC_Model, data = Fit$Data_lists$Stan_data, chains = chains, ...)
rstan::sampling(stanmodels$MCMC_Model, data = Fit$Data_lists$Stan_data, chains = 1)
rstan::sampling(stanmodels$MCMC_Model, data = Fit$Data_lists$Stan_data, chains = 2)
Fit <- bakRFit(Fit, HybridFit = TRUE, chains = 1)
Fit <- bakRFit(Fit, StanFit = TRUE, chains = 1, keep_fit = FALSE)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
Fit <- bakRFit(Fit, HybridFit = TRUE, chains = 2)
library(devtools)
library(rstan)
# Plotting theme
theme_mds <-    theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.text = element_text(color="black", size = 12),
axis.title = element_text(color="black", size = 18),
strip.background = element_blank())
setwd("C:/Users/isaac/Documents/Simon_Lab/DynamicSeq/")
devtools::load_all()
set.seed(123)
sim_list <- sim_bakRData(200, num_kd_DE = c(0, 100),num_conds = 2, p_new = 0.1,
nreps = 2, eff_sd = 0.7, tl = 1, fn_sd = 1, STL = TRUE)
DynData <- sim_list$bakRData
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE, RateEst_size = 5)
Fit <- bakRFit(DynData, FastRerun = TRUE, StanRateEst = TRUE, RateEst_size = 15)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
Fit <- bakRFit(Fit, HybridFit = TRUE, chains = 2)
pkgbuild::compile_dll(force = TRUE)
devtools::document
devtools::document()
library(devtools)
library(tidyverse)
library(rstan)
# Plotting theme
theme_mds <-    theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.text = element_text(color="black", size = 12),
axis.title = element_text(color="black", size = 18),
strip.background = element_blank())
setwd("C:/Users/isaac/Documents/Simon_Lab/DynamicSeq/")
devtools::load_all()
set.seed(123)
sim_list <- sim_bakRData(200, num_kd_DE = c(0, 100),num_conds = 2, p_new = 0.1,
nreps = 2, eff_sd = 0.7, tl = 1, fn_sd = 1, STL = TRUE)
DynData <- sim_list$bakRData
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE, RateEst_size = 5)
Fit <- bakRFit(DynData, FastRerun = TRUE, StanRateEst = TRUE, RateEst_size = 15)
Fit <- bakRFit(DynData, FastRerun = TRUE, StanRateEst = FALSE, pnew = rep(0.1, times = 4), pold = 0.001)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
Fit <- bakRFit(Fit, HybridFit = TRUE, chains = 2)
Fit <- bakRFit(Fit, HybridFit = TRUE, chains = 1)
## See what actual fns are
Fn_rep <- sim_list$sim_list$Fn_rep_sim
kd_rep <- -log(1 - Fn_rep$fn)/1
data_list <- Fit$Data_lists$Stan_data
## Look at Feature 524, R == 2, MT == 2
plot(log(kd_rep[Fn_rep$Feature_ID %in% unique(data_list$sdf$XF)]), Fit$Fast_Fit$Fn_Estimates$log_kdeg )
abline(a = 0, b = 1)
plot(log(kd_rep[Fn_rep$Feature_ID %in% unique(data_list$sdf$XF)]), log(Fit$Hybrid_Fit$Kdeg_df$kdeg ))
Fit$Hybrid_Fit$Kdeg_df$kdeg
Fit$Fast_Fit$Fn_Estimates$log_kdeg
logit_fnrep <- pracma::logit(Fn_rep)
logit_fnrep <- Fn_rep$Logit_fn
plot( logit_fnrep[Fn_rep$Feature_ID %in% unique(data_list$sdf$XF)], Fit$Hybrid_Fit$Fn_Estimates$logit_fn)
abline(a = 0, b = 1)
sim_list <- sim_bakRData(400, num_kd_DE = c(0, 100),num_conds = 2, p_new = 0.1,
nreps = 2, eff_sd = 0.7, tl = 1, fn_sd = 1, STL = TRUE)
DynData <- sim_list$bakRData
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE, RateEst_size = 5)
Fit <- bakRFit(Fit, HybridFit = TRUE, chains = 1)
devtools::install(build_vignettes = TRUE)
devtools::install(build_vignettes = TRUE)
library(devtools)
library(tidyverse)
library(rstan)
# Plotting theme
theme_mds <-    theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.text = element_text(color="black", size = 12),
axis.title = element_text(color="black", size = 18),
strip.background = element_blank())
# Or just load installed package
library(bakR)
set.seed(123)
sim_list <- sim_bakRData(400, num_kd_DE = c(0, 100),num_conds = 2, p_new = 0.1,
nreps = 2, eff_sd = 0.7, tl = 1, fn_sd = 1, STL = TRUE)
DynData <- sim_list$bakRData
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE, RateEst_size = 5)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
Fit <- bakRFit(Fit, HybridFit = TRUE, chains = 2)
devtools::build_manual(pkg = "bakR")
devtools::build_manual()
rcmdcheck::rcmdcheck()
library(devtools)
# Plotting theme
theme_mds <-    theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.text = element_text(color="black", size = 12),
axis.title = element_text(color="black", size = 18),
strip.background = element_blank())
setwd("C:/Users/isaac/Documents/Simon_Lab/bakR/")
devtools::load_all()
set.seed(123)
sim_list <- sim_bakRData(400, num_kd_DE = c(0, 100),num_conds = 2, p_new = 0.1,
nreps = 2, eff_sd = 0.7, tl = 1, fn_sd = 1, STL = TRUE)
DynData <- sim_list$bakRData
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE, RateEst_size = 5)
devtools::load_all()
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE, RateEst_size = 5)
devtools::load_all()
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE, RateEst_size = 5)
devtools::load_all()
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE, RateEst_size = 5)
rcmdcheck::rcmdcheck()
devtools::document()
devtools::document()
rcmdcheck::rcmdcheck()
data("cB_example")
cB_small
dim(cB_small)
data("metadf_example")
metadf
{}
devtools::document
devtools::document()
devtools::document()
rcmdcheck::rcmdcheck()
devtools::load_all()
data("cB_small")
cB_small
data("metadf")
metadf
devtools::load_all()
?metadf
devtools::document()
?metadf
rcmdcheck::rcmdcheck()
rcmdcheck::rcmdcheck()
devtools::document()
rcmdcheck::rcmdcheck()
devtools::document()
rcmdcheck::rcmdcheck()
(900*899)/2
(((900*899)/2)^2)*(75^4)
(((300*299)/2)^2)*(75^4)
(((300*299)/2)^2)*(25^4)
(((300*299)/2)^2)*(15^4)
(((150*149)/2)^2)*(15^4)
?plotMA
p.adjust
library(devtools)
library(tidyverse)
library(rstan)
# Plotting theme
theme_mds <-    theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.text = element_text(color="black", size = 12),
axis.title = element_text(color="black", size = 18),
strip.background = element_blank())
setwd("C:/Users/isaac/Documents/Simon_Lab/bakR/")
devtools::load_all()
set.seed(123)
sim_list <- sim_bakRData(400, num_kd_DE = c(0, 100),num_conds = 2, p_new = 0.1,
nreps = 2, eff_sd = 0.7, tl = 1, fn_sd = 1, STL = TRUE)
DynData <- sim_list$bakRData
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE, RateEst_size = 5)
class(Fit)
devtools::load_all()
plotMA(Fit)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
Fit <- bakRFit(Fit, HybridFit = TRUE, chains = 2)
plotMA(Fit, Model = "Hybrid")
plotMA(Fit, Model = "MLE")
?plotMA
devtools::document()
?plotMA
devtools::load_all()
devtools::document()
?plotMA
devtools::document()
?plotMA
devtools::load_all()
plotMA(Fit, Model = "Hybrid")
plotMA(Fit, Model = "MLE")
?optim
sqrt(2/3)
4800*(1-sqrt(2/3))
(4800*(1-sqrt(2/3)))/150
4000/1.25
library(devtools)
library(tidyverse)
library(rstan)
# Plotting theme
theme_mds <-    theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.text = element_text(color="black", size = 12),
axis.title = element_text(color="black", size = 18),
strip.background = element_blank())
setwd("C:/Users/isaac/Documents/Simon_Lab/bakR/")
devtools::load_all()
set.seed(123)
sim_list <- sim_bakRData(400, num_kd_DE = c(0, 100),num_conds = 2, p_new = 0.1,
nreps = 2, eff_sd = 0.7, tl = 1, fn_sd = 1, STL = TRUE)
DynData <- sim_list$bakRData
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE, RateEst_size = 5)
cutoff <- 0.3
effs <- Fit$Fast_Fit$Effects_df$effect
ses <- Fit$Fast_Fit$Effects_df$se
tstats <- effs/ses
delta <- cutoff/ses*sign(effs)
pvals <- pnorm(tstats + delta, lower.tail = FALSE) + pnorm(tstat - delta, lower.tail = FALSE )
pvals <- pnorm(tstats + delta, lower.tail = FALSE) + pnorm(tstats - delta, lower.tail = FALSE )
pvals
hist(pvals)
cutoff <- 0
effs <- Fit$Fast_Fit$Effects_df$effect
ses <- Fit$Fast_Fit$Effects_df$se
tstats <- effs/ses
delta <- cutoff/ses*sign(effs)
pvals <- pnorm(tstats + delta, lower.tail = FALSE) + pnorm(tstats - delta, lower.tail = FALSE )
hist(pvals)
hist(pvals)
pvals <- (pnorm(tstats + delta, lower.tail = FALSE) + pnorm(tstats - delta, lower.tail = FALSE ))/2
hist(pvals)
hist(Fit$Fast_Fit$Effects_df$pval)
hist(pvals)
hist(Fit$Fast_Fit$Effects_df$pval)
hist(pvals)
hist(Fit$Fast_Fit$Effects_df$pval)
newstat <- sign(effs)*pmax( (abs(effs) - cutoff)/ses, 0)
cutoff <- 0
effs <- Fit$Fast_Fit$Effects_df$effect
ses <- Fit$Fast_Fit$Effects_df$se
newstat <- sign(effs)*pmax( (abs(effs) - cutoff)/ses, 0)
newpvals <- pmin(1, 2*pnorm( (abs(effs) - cutoff)/ses, lower.tail = FALSE ) )
hist(pvals)
hist(Fit$Fast_Fit$Effects_df$pval)
testpvals <- pnorm(abs(effs)/ses, lower.tail = FALSE)
hist(testpvals)
hist(Fit$Fast_Fit$Effects_df$pval)
testpvals <- 2*pnorm(abs(effs)/ses, lower.tail = FALSE)
plot(testpvals, Fit$Fast_Fit$Effects_df$pval)
abline(0,1)
effs <- Fit$Fast_Fit$Effects_df$L2FC_kdeg
ses <- Fit$Fast_Fit$Effects_df$se
testpvals <- 2*pnorm(abs(effs)/ses, lower.tail = FALSE)
plot(testpvals, Fit$Fast_Fit$Effects_df$pval)
abline(0,1)
effs <- Fit$Fast_Fit$Effects_df$effect
ses <- Fit$Fast_Fit$Effects_df$se
testpvals <- 2*pnorm(abs(effs)/ses, lower.tail = FALSE)
plot(testpvals, Fit$Fast_Fit$Effects_df$pval)
abline(0,1)
setwd("C:/Users/isaac/Documents/Simon_Lab/bakR/")
devtools::load_all()
set.seed(123)
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE)
## Alt statistical testing procedure
cutoff <- 0
effs <- Fit$Fast_Fit$Effects_df$effect
ses <- Fit$Fast_Fit$Effects_df$se
newstat <- sign(effs)*pmax( (abs(effs) - cutoff)/ses, 0)
newpvals <- pmin(1, 2*pnorm( (abs(effs) - cutoff)/ses, lower.tail = FALSE ) )
testpvals <- 2*pnorm(abs(effs)/ses, lower.tail = FALSE)
plot(testpvals, Fit$Fast_Fit$Effects_df$pval)
abline(0,1)
plot(newpvals, Fit$Fast_Fit$Effects_df$pval)
abline(0,1)
## Alt statistical testing procedure
cutoff <- 0.3
effs <- Fit$Fast_Fit$Effects_df$effect
ses <- Fit$Fast_Fit$Effects_df$se
newstat <- sign(effs)*pmax( (abs(effs) - cutoff)/ses, 0)
newpvals <- pmin(1, 2*pnorm( (abs(effs) - cutoff)/ses, lower.tail = FALSE ) )
testpvals <- 2*pnorm(abs(effs)/ses, lower.tail = FALSE)
plot(newpvals, Fit$Fast_Fit$Effects_df$pval)
plot(newpvals, Fit$Fast_Fit$Effects_df$pval)
abline(0,1)
stopifnot(is.numeric("a"))
setwd("C:/Users/isaac/Documents/Simon_Lab/bakR/")
devtools::load_all()
set.seed(123)
sim_list <- sim_bakRData(400, num_kd_DE = c(0, 100),num_conds = 2, p_new = 0.1,
nreps = 2, eff_sd = 0.7, tl = 1, fn_sd = 1, STL = TRUE)
DynData <- sim_list$bakRData
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE)
plot(Fit$Fast_Fit$Effects_df$pval, testpvals)
plot(Fit$Fast_Fit$Effects_df$pval, newpvals)
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE, null_cutoff = 0.3)
plot(Fit$Fast_Fit$Effects_df$pval, newpvals)
Fit$Fast_Fit$Effects_df
setwd("C:/Users/isaac/Documents/Simon_Lab/bakR/")
devtools::load_all()
set.seed(123)
sim_list <- sim_bakRData(400, num_kd_DE = c(0, 100),num_conds = 2, p_new = 0.1,
nreps = 2, eff_sd = 0.7, tl = 1, fn_sd = 1, STL = TRUE)
DynData <- sim_list$bakRData
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE, null_cutoff = 0.3)
plot(Fit$Fast_Fit$Effects_df$pval, newpvals)
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE, null_cutoff = 0)
plot(Fit$Fast_Fit$Effects_df$pval, testpvals)
devtools::document()
library(rstan)
library(devtools)
library(tidyverse)
library(rstan)
# Plotting theme
theme_mds <-    theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
axis.ticks = element_line(colour = "black"),
axis.text = element_text(color="black", size = 12),
axis.title = element_text(color="black", size = 18),
strip.background = element_blank())
setwd("C:/Users/isaac/Documents/Simon_Lab/bakR/")
devtools::load_all()
set.seed(123)
sim_list <- sim_bakRData(400, num_kd_DE = c(0, 100),num_conds = 2, p_new = 0.1,
nreps = 2, eff_sd = 0.7, tl = 1, fn_sd = 1, STL = TRUE)
DynData <- sim_list$bakRData
Fit <- bakRFit(DynData, lower = -7, upper = 7, StanRateEst = FALSE)
f2U_check <- Fit$Data_lists$Fast_df %>%
group_by(XF, sample) %>%
summarise(n2U = sum(n[nT <=2]),
nmore = sum(n[nT > 2])) %>%
mutate(f2U = n2U/(n2U + nmore))
sum(f2U_check$f2U > 0.25)
max(Fit$Fast_Fit$Fn_Estimates$Feature_ID)
devtools::document()
devtools::document()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
bakR_test <- sim_bakRData(500)
Fit_test <- bakRFit(bakR_test$bakRData, StanRateEst = TRUE, RateEst_size = 10)
plotVolcano(Fit_test$Fast_Fit)
?as.data.frame
devtools::check()
.Last.error.trace
library(utils)
devtools::install()
devtools::check()
?bakRFit
?usethis::use_vignette
usethis::use_vignette("Further-Analyses")
usethis::use_package("DESeq2", "Suggests")
usethis::use_package("pheatmap", "Suggests")
?bakRFit
sum(c(1, 2, 2, 3) %in% c(1, 2, 3))
class(Fit)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
.Last.error.trace
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
?sim_bakRData
sim <- sim_bakRData(1000, num_ks_DE = c(0, 200), num_kd_DE = c(0, 0))
Fittest <- bakRFit(sim$bakRData, pnew = rep(0.05, times = 6), pold= 0.001)
?colnames
Counts <- Fittest$Data_lists$Count_Matrix
Counts
conditions <- as.factor(rep(c("ref", "exp"), each = 3))
conditions
colnames(Counts)
sim$bakRData$metadf
conditions_s4U <- as.factor(rep(c("ref", "exp"), each = 3))
conditions_ctl <- as.factor(c("ref", "exp"))
conditions <- c(conditions_s4U, conditions_ctl)
colData <- data.frame(conditions = conditions)
rownames(colData) <- colnames(Counts)
print(t(colData))
library(DESeq2)
dds <- DESeqDataSetFromMatrix(countData = Counts, colData = colData, design = ~conditions)
ddso <- DESeq(dds)
reso <- results(ddso, contrast = c("conditions", "exp", "ref"))
reso$lfcSE
plot(reso$log2FoldChange/reso$lfcSE, reso$stat)
plot(reso$log2FoldChange/reso$lfcSE, reso$stat) +
abline(0,1)
?tibble
library(ggplot2)
-log10(0.1)
10^-0.1
ksyn_df <- tibble(L2FC = reso$log2FoldChange + Fittest$Fast_Fit$Effects_df$L2FC_kdeg)
ksyn_df <- data.frame(L2FC = reso$log2FoldChange + Fittest$Fast_Fit$Effects_df$L2FC_kdeg)
ksyn_df <- ksyn_df %>%
se
ksyn_df$se <- sqrt(reso$lfcSE^2 + (Fittest$Fast_Fit$Effects_df$se*log2(exp(1)))^2)
ksyn_df <- ksyn_df %>%
mutate(pval = 2*pnorm(-abs(L2FC/se)), padj = p.adjust(pval, method = "BH"))
?library
library(tidyverse, quietly = TRUE)
devtools::load_all()
sim <- sim_bakRData(1000, eff_mean = 1)
Fit <- bakRFit(sim$bakRData, StanRateEst = TRUE, RateEst_size = 5)
plotMA(Fit, Model = "MLE")
plotVolcano(Fit$Fast_Fit)
